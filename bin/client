#!/usr/bin/env node
var lt_client = require('../client');

var argv = require('optimist')
    .usage('Usage: $0 --port [num]')
    .demand(['port'])
    .options('auxports', {
        default: '',
        describe: 'aux ports'
    })
    .options('host', {
        default: 'https://develer.me',
        describe: 'upstream server providing forwarding'
    })
    .options('subdomain', {
        describe: 'request this subdomain'
    })
    .options('local-host', {
        describe: 'tunnel traffic to this host instead of localhost'
    })
    .default('local-host', 'localhost')
    .describe('port', 'internal http server port')
    .argv;

var auxports = [];
if (argv.auxports) {
    auxports = argv.auxports.toString().split(' ');
}
if (argv.livereload) {
    auxports.push('35729');
}
var opt = {
    host: argv.host,
    port: argv.port,
    local_host: argv['local-host'],
    subdomain: argv.subdomain,
}

lt_client(opt.port, opt, function(err, tunnel) {
    if (err) {
        console.error(err);
        return process.exit(1);
    }

    console.log('your url is: %s', tunnel.url);

    tunnel.on('error', function(err) {
        console.error(err);
        return process.exit(1);
    });
});

function changePort(address, new_port) {
    var parts = address.split(':');
    var new_address = '';
    for (var i = 0 ; i < parts.length - 1 ; i++) {
        new_address += parts[i] + ':';
    }
    return new_address + new_port;
}

for(var i = 0 ; i < auxports.length; i++) {
    (function(port) {
        var opt = {
            host: changePort(argv.host, port),
            port: port,
            local_host: argv['local-host'],
            subdomain: argv.subdomain,
        }

        lt_client(opt.port, opt, function(err, tunnel) {
            if (err) {
                console.error(err);
                return process.exit(1);
            }

            console.log('your url is: %s', tunnel.url);

            tunnel.on('error', function(err) {
                console.error(err);
                return process.exit(1);
            });
        });
    })(auxports[i]);
};
// vim: ft=javascript
